/**
 * 
 */
package com.xenonteam.xenonlib.main;


import static com.xenonteam.xenonlib.config.Refs.MOD_AUTHORS;
import static com.xenonteam.xenonlib.config.Refs.MOD_DEPS;
import static com.xenonteam.xenonlib.config.Refs.MOD_ID;
import static com.xenonteam.xenonlib.config.Refs.MOD_NAME;
import static com.xenonteam.xenonlib.config.Refs.MOD_VERSION;

import java.util.Arrays;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;

import com.xenonteam.xenonlib.common.networking.DescriptionHandler;
import com.xenonteam.xenonlib.proxy.IXenonProxy;
import com.xenonteam.xenonlib.registry.Register;
import com.xenonteam.xenonlib.registry.RegistryHelper;

/**
 * @author tim4242
 * @author philipas
 *
 */

@Mod(modid = MOD_ID, name = MOD_NAME, version = MOD_VERSION, dependencies = MOD_DEPS)
public class XenonLib 
{
	
	@SidedProxy(clientSide = "com.xenonteam.xenonlib.proxy.ClientProxy", serverSide = "com.xenonteam.xenonlib.proxy.ServerProxy")
	public static IXenonProxy PROXY;
	
	@Mod.Instance(MOD_ID)
	public static XenonLib INSTANCE;
	
	@Mod.Metadata(MOD_ID)
	public static ModMetadata METADATA;
	
	@Register(modid = MOD_ID, unlocName = "test")
	public static Item TestItem;
	
	@EventHandler
	public void preInit(FMLPreInitializationEvent event)
	{
		METADATA.modId = MOD_ID;
		METADATA.name = MOD_NAME;
		METADATA.version = MOD_VERSION;
		METADATA.authorList = Arrays.asList(MOD_AUTHORS);
		
		METADATA.autogenerated = false;
		DescriptionHandler.init();
	}
	
	@EventHandler
	public void init(FMLInitializationEvent event)
	{
		
		RegistryHelper.registerObjects(XenonLib.class);
		
	}
	
	@EventHandler
	public void postInit(FMLPostInitializationEvent event)
	{
		
	}
	
}
